
group = 'xite'
version = '0.1-SNAPSHOT'
description = """Xite ${version}
Static website generator.
"""

defaultTasks 'clean', 'check', 'app'

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'maven'

buildDir = 'target'
appBuildDir = "${buildDir}/app"

repositories {
    flatDir(dirs: file('lib'))
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile 'com.github.enr:markdownj-extras:0.4',
            'com.madgag:markdownj-core:0.4.1',
            'commons-cli:commons-cli:1.2',
            'commons-lang:commons-lang:2.5',
            'commons-io:commons-io:1.4',
            'org.apache.commons:commons-exec:1.0.1',
            'commons-codec:commons-codec:1.4',
            'org.apache.ant:ant-nodeps:1.8.1',
            'org.apache.ant:ant-commons-net:1.8.0',
            'org.eclipse.jetty:jetty-server:7.2.2.v20101205',
            'org.eclipse.jetty:jetty-util:7.2.2.v20101205',
            'org.slf4j:slf4j-api:1.6.0',
            'org.slf4j:slf4j-log4j12:1.6.0',
            'log4j:log4j:1.2.16'
    testCompile 'org.testng:testng:6.1.1',
                'com.beust:jcommander:1.12',    // required from testng
                'com.google.inject:guice:2.0',  // required from testng
                'org.beanshell:bsh:2.0b4',      // required from testng
                'junit:junit:3.8.1',            // required from testng
                'org.uncommons.reportng:reportng:1.1.3',
                'org.apache.velocity:velocity:1.6.2',           // required from reportng
                'commons-collections:commons-collections:3.2.1' // required from reportng
    groovy  'org.codehaus.groovy:groovy:1.8.1'
}

test {
    useTestNG()
    def xiteHomeFile = project.file(appBuildDir)
    def projectRootDir = project.projectDir.getAbsolutePath()
    systemProperties['xite.itest.XITE_HOME'] = xiteHomeFile.getAbsolutePath()
    systemProperties['xite.itest.project.rootDir'] = projectRootDir
    //systemProperties['org.uncommons.reportng.stylesheet'] = "${projectDir}/resources/hudsonesque.css"
    systemProperties['org.uncommons.reportng.locale'] = 'en_US'
    systemProperties['org.uncommons.reportng.title'] = "Xite ${version} test reports"
    options {
            listeners << 'org.uncommons.reportng.HTMLReporter'
            listeners << 'org.uncommons.reportng.JUnitXMLReporter'
    }
}

task 'xite-deps'(dependsOn: configurations.default.getAllArtifacts().getBuildDependencies(), type: Copy) {
    into "${appBuildDir}/lib"
    from configurations.default
    from configurations.default.allArtifacts*.file
    description = 'Creates the working application in target directory.'
}

task 'xite-bin'(dependsOn: 'xite-deps', type:Copy) {
    from 'src/dist/bin/xite.sh'
    into "${appBuildDir}/bin"
    rename('.sh$', '')
    description = 'Creates the working application in target directory.'
}

task 'xite-conf'(dependsOn: 'xite-bin', type:Copy) {
    from 'src/dist/conf'
    into "${appBuildDir}/conf"
    description = 'Creates the working application in target directory.'
}

task app(dependsOn: 'xite-conf') {
    description = 'Creates the working application in target directory.'
}

app.doLast { 
   logger.debug("App builded in ${appBuildDir}")
   def binDir = new File("${appBuildDir}/bin")
   if (binDir.exists()) {
     ant.chmod(perm: "+x", dir: binDir, includes: '*')
   }
}

task 'xite-doc'(dependsOn: ':app', type:Copy) {
    from 'README.markdown'
    into "${appBuildDir}/"
    rename('.markdown$', '.txt')
    description = 'Add docs for distribution.'
}

task dist(type: Zip, dependsOn: ':xite-doc') {
    description = 'Creates the distributable archive.'
    into("xite-${version}") {
        from appBuildDir
    }
}

dist.doLast { 
  logger.debug("Distribution file ${dist.archiveName}")
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.0-milestone-8a'
}

