
// --- release plugin
// see: http://tellurianring.com/wiki/gradle/release
//apply from: "https://launchpad.net/gradle-release/trunk/latest/+download/apply.groovy"

// --- about plugin
// see: http://evgeny-goldin.com/wiki/Gradle-about-plugin

buildscript {
    repositories { mavenRepo url: 'http://evgenyg.artifactoryonline.com/evgenyg/repo/' }
    dependencies { classpath "com.github.goldin.plugins:gradle:0.1.3" }
}


ext {
    groovyVersion = '2.0.0-beta-3'
    javaModules = [
        ':modules:core', ':modules:cli', ':modules:acceptance-tests', ':modules:original'
    ]
    acceptanceTests = [':modules:acceptance-tests']
}

allprojects { project ->
    group = 'com.github.enr'
        
    buildDir = 'target'
    
    repositories {
        mavenLocal()
        mavenCentral()    
        maven {
            url 'https://oss.sonatype.org/content/repositories/releases/'
        }
    }
}


subprojects {

    if (project.path in javaModules) {
        apply plugin: 'groovy'
        apply plugin: 'eclipse'
        apply plugin: 'about'

        configurations {
            compile.transitive = true
            testCompile.transitive = true
        }

        dependencies {
            groovy "org.codehaus.groovy:groovy-all:$groovyVersion"

            compile "org.codehaus.groovy:groovy-all:$groovyVersion",
                    'com.google.inject:guice:3.0'
            testCompile 'org.testng:testng:6.5.2',
                        'org.easytesting:fest-assert-core:2.0M5'
        }

        test {
            useTestNG()
        }
        
        archivesBaseName = "xite-${project.name}"

        sourceCompatibility = 1.6
        targetCompatibility = 1.6
 
/* 
tasks.withType(Compile) {
    options.compilerArgs << "-Xlint:deprecation"
}
*/
        jar {
            manifest {
                attributes( "Implementation-Title": "Gradle",
                            "Implementation-Version": version,
                            "Project":project.name)
            }
        }
        
        about { dumpDependencies = false }
        
        eclipse {
            project {
                name = "xite-${project.name}"
            }
            classpath {
                // to keep the same depth in the build from in and outside Eclipse
                defaultOutputDir = new File("${project.buildDir}/eclipse/classes");
                downloadJavadoc = true
            }
        }
    }

    if (project.path in acceptanceTests) {
        test.enabled = false
        task sut(   dependsOn: [':modules:core:test', ':modules:cli:test', ':modules:cli:installApp'],
                    description: 'Builds the system under test (using installApp).') << {
                    test.enabled = true
        }    
        task uat(   dependsOn: [sut, test], 
                    description: 'Runs the user acceptance tests.') << {
                    test.enabled = true
        }
    }
}


