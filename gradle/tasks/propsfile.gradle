
apply plugin: 'groovy'

task propsfile(type: PropsfileTask, description:'Creates a properties file in the classpath')

//tasks.compileGroovy.dependsOn tasks.propsfile

tasks.withType(Compile) { task ->
    task.dependsOn tasks.propsfile
}

// description = "Generates properties file in project classpath"
class PropsfileTask extends DefaultTask {

    /* An output label for the properties file. */
    private static final String BUILD_LABEL = "Generated by the Gradle Propsfile Plugin";

    @Optional
    String filename = "${project.name}.properties"
    
    Map props;

    @TaskAction
    def buildPropertiesFile() {
    
        File outputDir = project.sourceSets.main.output.classesDir
        /*
        println "project ${project.name}"
        println "filename ${filename}"
        println "build ${project.buildDir}"
        println "out ${outputDir}"
        println "props ${props}"
        */
        
        if (!props) {
            return
        }
        File propertiesFile = new File(outputDir, filename);
        //println "propertiesFile ${propertiesFile}"

        final Properties properties = new Properties();
        properties.putAll(props);
        //println "properties ${properties}"
        def success = propertiesFile.getParentFile().mkdirs();
        properties.store(new FileWriter(propertiesFile), BUILD_LABEL);
        //println "success ${propertiesFile.exists()}"
    }
}